<resources>
    <string name="app_name">Simple Computer Emulator</string>

    <string name="hello_world">Hello world!</string>
    <string name="action_settings">Settings</string>
    <string name="addbtn_txt2">Add Input\nCard</string>
    <!--<string name="addbtn_txt1">Add Cell\n(Hold for More)</string>-->
    <string name="addbtn_txt1">Search for Cell</string>
    <string name="IOLabel">INPUT</string>
    <string name="IOLabel2">OUTPUT</string>
    <string name="memLabel">MEMORY</string>
    <string name="txtlbl_ir">IR</string>
    <string name="txtlbl_clear">CLEAR</string>
    <string name="txtlbl_step">STEP</string>
    <string name="txtlbl_run">RUN</string>
    <string name="txtlbl_pc">PC</string>
    <string name="txtlbl_00">00</string>
    <string name="txtlbl_empty">EMPTY</string>
    <string name="txtlbl_ac">AC</string>
    <string name="instructions0">Simple Computer Instructions</string>
    <string name="instructions1">Keyboard input is allowed to cells within the Memory, Input Cards, and Program Counter (PC).
        \nSimply select the desired cell and type the contents.</string>
    <string name="instructions2">Cell contents can be moved from one cell to another by highlighting the cell text, holding the selected text, then using the toolbar at the top.
        \nPressing the Scissors will cut.
        \nPressing the double paper icon will copy.
        \nPressing the clipboard to paste.</string>
    <string name="instructions3">A button provided at the top of the Simple Computer Emulator to allow clearing of the cells.
        \nTapping the button will bring up a Multi-Choice list of what you want to clear.
        \nClearing of the CPU will reset the Program Counter to \'00\'.
        \nClearing of the Input Cards resets the Input Card counter to \'01\'. Memory location \'00\' is always \'001\' by default.
        \nHolding the Clear Button to clear all components of the Simple Computer simultaneously and Force Halt of Program if caught in an Infinite Loop.</string>
    <string name="instructions4">The Simple Computer Emulator is a three decimal digit virtual machine.
        \nIt contains 100 cells of Memory (cell \'00\' through \'99\'), Input Cards, and Ouput Cards.
        \nThe Central Processing Unit (CPU) contains a three decimal digit accumulator (with an associated one decimal digit Carry \'Bit\'), a three decimal digit Instruction Register, and a two decimal digit Program Counter.
        \nInstruction Set Each instruction word is composed of a one decimal digit operation code and a two decimal digit address.
        \nThe left most digit is taken to be the operation code, the right two digits are the address.</string>
    <string name="instructions5">The following is the instruction set for this emulator:
        \nOp-code Description
        \n\n0 _ _ Input – Copy the current input card into cell number _ _ and advance to the next card. Halt execution if the input card is empty.
        \n\n1 _ _ Output – Copy the contents of cell number _ _ to the current output card and advance to the next card.
        \n\n2 _ _ Add – Add the contents of cell number _ _ to the value of the accumulator. Sets Carry Bit on overflow.
        \n\n3 _ _ Subtract – Subtract the contents of cell number _ _ from the current value of the accumulator. Sets Carry Bit on overflow.
        \n\n4 _ _ Load Accumulator – Clear the accumulator and carry flag, then copy the contents of cell number _ _ into the accumulator.
        \n\n5 _ _ Store Accumulator – Copy the tree digits of the accumulator into cell number _ _.
        \n\n6 _ _ Jump – Place the current value of the program counter into cell 99. Next, change the value of the program counter to _ _.
        \n\n7 _ _ Test Accumulator – If the value of the accumulator is negative, change the value of the program counter to _ _.
        \n\n8 x y Shift – Shift the accumulator left x digits, then shift the result right y digits. Shift digits through the Carry Bit and enter zeros from the left and right appropriately.
        \n\n9 _ _ Halt – Replace the value of the program counter with cell number _ _ and then halt execution.</string>

    <string name="instructions6">
        \nPressing the Run program will execute the program.
        \nMake sure the Program counter is set to the correct value.
        \nA message is posted at the end of execution.
        \n\nHolding down the Run button will provide some preloaded programs as well as allowing user to the save current program.</string>
    <string name="instructions7">Pressing the Run program will execute the program: Make sure the Program Counter is set to the correct value.
        \nExecution can proceed one instruction at a time by clicking the Step button in the CPU. This feature is useful when debugging.
        \n\nThe Run button can be selected at any time during this process to allow execution to proceed normally from that point on.
        \nA message is posted at the end of execution.</string>
    <string name="btnlbl_helpdone">Done</string>
    <string name="txtlbl_enterFileName">Enter File Name Here</string>
    <string name="btnlbl_loadFile">Load File</string>
    <string name="btnlbl_saveToFile">Save To File</string>
    <string name="txtlbl_execution">Execution</string>
    <string name="txtlbl_logic">Logic</string>
    <string name="txtlbl_clearingcell">Clearing Cells</string>
    <string name="txtlbl_movingcells">Moving Cell Contents</string>
    <string name="txtlbl_keyboardinput">Keyboard Input</string>
</resources>
